

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 20 14:19:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0008                     _PORTD	set	8
   170  0006                     _PORTB	set	6
   171  000B                     _INTCONbits	set	11
   172  0001                     _TMR0	set	1
   173  0088                     _TRISD	set	136
   174  0086                     _TRISB	set	134
   175  0081                     _OPTION_REGbits	set	129
   176                           
   177                           	psect	cinit
   178  07EA                     start_initialization:	
   179                           ; #config settings
   180                           
   181  07EA                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184  07EA  01F7               	clrf	__pbssCOMMON& (0+127)
   185  07EB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   186  07EC  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   187  07ED  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   188  07EE  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   189  07EF  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   190                           
   191                           ; Clear objects allocated to BANK0
   192  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   193  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   194  07F2  01A0               	clrf	__pbssBANK0& (0+127)
   195  07F3  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   196  07F4  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   197  07F5  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   198  07F6  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   199  07F7  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   200  07F8  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   201  07F9  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   202  07FA  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   203  07FB  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   204  07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07FC                     __end_of__initialization:
   208  07FC  0183               	clrf	3
   209  07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMMON
   212  0077                     __pbssCOMMON:
   213  0077                     _mem1:
   214  0077                     	ds	2
   215  0079                     _y:
   216  0079                     	ds	2
   217  007B                     _x:
   218  007B                     	ds	2
   219                           
   220                           	psect	bssBANK0
   221  0020                     __pbssBANK0:
   222  0020                     _temp3:
   223  0020                     	ds	2
   224  0022                     _temp2:
   225  0022                     	ds	2
   226  0024                     _temp1:
   227  0024                     	ds	2
   228  0026                     _temp:
   229  0026                     	ds	2
   230  0028                     _mem2:
   231  0028                     	ds	2
   232                           
   233                           	psect	cstackCOMMON
   234  0070                     __pcstackCOMMON:
   235  0070                     ?_Timer0_Init:
   236  0070                     ??_Timer0_Init:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_DelayTimer0_01ms:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_control_fan:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     DelayTimer0_01ms@t:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     control_fan@x:	
   252                           ; 2 bytes @ 0x0
   253                           
   254                           
   255                           ; 2 bytes @ 0x0
   256  0070                     	ds	2
   257  0072                     ??_DelayTimer0_01ms:
   258  0072                     control_fan@y:	
   259                           ; 1 bytes @ 0x2
   260                           
   261                           
   262                           ; 2 bytes @ 0x2
   263  0072                     	ds	2
   264  0074                     ??_control_fan:
   265                           
   266                           ; 1 bytes @ 0x4
   267  0074                     	ds	1
   268  0075                     ??_main:
   269                           
   270                           ; 1 bytes @ 0x5
   271  0075                     	ds	2
   272                           
   273                           	psect	maintext
   274  0765                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 55 in file "../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          2       0       0       0       0
   297 ;;      Totals:         2       0       0       0       0
   298 ;;Total ram usage:        2 bytes
   299 ;; Hardware stack levels required when called: 1
   300 ;; This function calls:
   301 ;;		_DelayTimer0_01ms
   302 ;;		_Timer0_Init
   303 ;;		_control_fan
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           
   310                           ;psect for function _main
   311  0765                     _main:
   312  0765                     l730:	
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   315                           
   316                           
   317                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 57:       control_fan(x, y);
   318  0765  1683               	bsf	3,5	;RP0=1, select bank1
   319  0766  1303               	bcf	3,6	;RP1=0, select bank1
   320  0767  0186               	clrf	6	;volatile
   321                           
   322                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 58:       PORTB = 0x5;
   323  0768  1283               	bcf	3,5	;RP0=0, select bank0
   324  0769  1303               	bcf	3,6	;RP1=0, select bank0
   325  076A  0186               	clrf	6	;volatile
   326  076B                     l732:
   327                           
   328                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 59:       DelayTimer0_01ms(temp);
   329  076B  30FF               	movlw	255
   330  076C  1683               	bsf	3,5	;RP0=1, select bank1
   331  076D  1303               	bcf	3,6	;RP1=0, select bank1
   332  076E  0088               	movwf	8	;volatile
   333  076F                     l734:
   334                           
   335                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 61:       DelayTimer0_01ms(temp2);
   336  076F  120A  118A  26FE  120A  118A  	fcall	_Timer0_Init
   337  0774                     l736:
   338                           
   339                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 64: ;../../Source/MOTOR_CONTROL/MOTOR_CONTR
      +                          OL.c: 65: 
   340  0774  1283               	bcf	3,5	;RP0=0, select bank0
   341  0775  1303               	bcf	3,6	;RP1=0, select bank0
   342  0776  1F88               	btfss	8,7	;volatile
   343  0777  2F79               	goto	u111
   344  0778  2F7A               	goto	u110
   345  0779                     u111:
   346  0779  2F95               	goto	l53
   347  077A                     u110:
   348  077A                     l738:
   349  077A  0808               	movf	8,w	;volatile
   350  077B  397F               	andlw	127
   351  077C  00F5               	movwf	??_main
   352  077D  01F6               	clrf	??_main+1
   353  077E  0878               	movf	_mem1+1,w
   354  077F  0676               	xorwf	??_main+1,w
   355  0780  1D03               	skipz
   356  0781  2F84               	goto	u125
   357  0782  0877               	movf	_mem1,w
   358  0783  0675               	xorwf	??_main,w
   359  0784                     u125:
   360  0784  1903               	skipnz
   361  0785  2F87               	goto	u121
   362  0786  2F88               	goto	u120
   363  0787                     u121:
   364  0787  2F95               	goto	l53
   365  0788                     u120:
   366  0788                     l740:
   367                           
   368                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 66: 
   369  0788  0808               	movf	8,w	;volatile
   370  0789  397F               	andlw	127
   371  078A  00F5               	movwf	??_main
   372  078B  01F6               	clrf	??_main+1
   373  078C  0875               	movf	??_main,w
   374  078D  00FB               	movwf	_x
   375  078E  0876               	movf	??_main+1,w
   376  078F  00FC               	movwf	_x+1
   377  0790                     l742:
   378                           
   379                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 67:  }
   380  0790  087C               	movf	_x+1,w
   381  0791  00F8               	movwf	_mem1+1
   382  0792  087B               	movf	_x,w
   383  0793  00F7               	movwf	_mem1
   384                           
   385                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 68: }
   386  0794  2FB3               	goto	l750
   387  0795                     l53:
   388  0795  1B88               	btfsc	8,7	;volatile
   389  0796  2F98               	goto	u131
   390  0797  2F99               	goto	u130
   391  0798                     u131:
   392  0798  2FB3               	goto	l750
   393  0799                     u130:
   394  0799                     l744:
   395  0799  0808               	movf	8,w	;volatile
   396  079A  397F               	andlw	127
   397  079B  00F5               	movwf	??_main
   398  079C  01F6               	clrf	??_main+1
   399  079D  0829               	movf	_mem2+1,w
   400  079E  0676               	xorwf	??_main+1,w
   401  079F  1D03               	skipz
   402  07A0  2FA3               	goto	u145
   403  07A1  0828               	movf	_mem2,w
   404  07A2  0675               	xorwf	??_main,w
   405  07A3                     u145:
   406  07A3  1903               	skipnz
   407  07A4  2FA6               	goto	u141
   408  07A5  2FA7               	goto	u140
   409  07A6                     u141:
   410  07A6  2FB3               	goto	l750
   411  07A7                     u140:
   412  07A7                     l746:
   413  07A7  0808               	movf	8,w	;volatile
   414  07A8  397F               	andlw	127
   415  07A9  00F5               	movwf	??_main
   416  07AA  01F6               	clrf	??_main+1
   417  07AB  0875               	movf	??_main,w
   418  07AC  00F9               	movwf	_y
   419  07AD  0876               	movf	??_main+1,w
   420  07AE  00FA               	movwf	_y+1
   421  07AF                     l748:
   422  07AF  087A               	movf	_y+1,w
   423  07B0  00A9               	movwf	_mem2+1
   424  07B1  0879               	movf	_y,w
   425  07B2  00A8               	movwf	_mem2
   426  07B3                     l750:
   427  07B3  087C               	movf	_x+1,w
   428  07B4  00F1               	movwf	control_fan@x+1
   429  07B5  087B               	movf	_x,w
   430  07B6  00F0               	movwf	control_fan@x
   431  07B7  087A               	movf	_y+1,w
   432  07B8  00F3               	movwf	control_fan@y+1
   433  07B9  0879               	movf	_y,w
   434  07BA  00F2               	movwf	control_fan@y
   435  07BB  120A  118A  271F  120A  118A  	fcall	_control_fan
   436  07C0                     l752:
   437  07C0  3005               	movlw	5
   438  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   439  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   440  07C3  0086               	movwf	6	;volatile
   441  07C4                     l754:
   442  07C4  0827               	movf	_temp+1,w
   443  07C5  00F1               	movwf	DelayTimer0_01ms@t+1
   444  07C6  0826               	movf	_temp,w
   445  07C7  00F0               	movwf	DelayTimer0_01ms@t
   446  07C8  120A  118A  2706  120A  118A  	fcall	_DelayTimer0_01ms
   447  07CD                     l756:
   448  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   449  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   450  07CF  0824               	movf	_temp1,w
   451  07D0  0086               	movwf	6	;volatile
   452  07D1                     l758:
   453  07D1  0823               	movf	_temp2+1,w
   454  07D2  00F1               	movwf	DelayTimer0_01ms@t+1
   455  07D3  0822               	movf	_temp2,w
   456  07D4  00F0               	movwf	DelayTimer0_01ms@t
   457  07D5  120A  118A  2706  120A  118A  	fcall	_DelayTimer0_01ms
   458  07DA                     l760:
   459  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   460  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   461  07DC  0186               	clrf	6	;volatile
   462  07DD  0821               	movf	_temp3+1,w
   463  07DE  00F1               	movwf	DelayTimer0_01ms@t+1
   464  07DF  0820               	movf	_temp3,w
   465  07E0  00F0               	movwf	DelayTimer0_01ms@t
   466  07E1  120A  118A  2706  120A  118A  	fcall	_DelayTimer0_01ms
   467  07E6  2F74               	goto	l736
   468  07E7  120A  118A  2800   	ljmp	start
   469  07EA                     __end_of_main:
   470                           
   471                           	psect	text1
   472  071F                     __ptext1:	
   473 ;; *************** function _control_fan *****************
   474 ;; Defined at:
   475 ;;		line 40 in file "../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  x               2    0[COMMON] int 
   478 ;;  y               2    2[COMMON] int 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         4       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          1       0       0       0       0
   493 ;;      Totals:         5       0       0       0       0
   494 ;;Total ram usage:        5 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _control_fan
   505  071F                     _control_fan:
   506  071F                     l716:	
   507                           ;incstack = 0
   508                           ; Regs used in _control_fan: [wreg+status,2+status,0]
   509                           
   510                           
   511                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 41:     TRISB = 0x0;
   512  071F  0871               	movf	control_fan@x+1,w
   513  0720  3A80               	xorlw	128
   514  0721  00F4               	movwf	??_control_fan
   515  0722  0873               	movf	control_fan@y+1,w
   516  0723  3A80               	xorlw	128
   517  0724  0274               	subwf	??_control_fan,w
   518  0725  1D03               	skipz
   519  0726  2F29               	goto	u105
   520  0727  0872               	movf	control_fan@y,w
   521  0728  0270               	subwf	control_fan@x,w
   522  0729                     u105:
   523  0729  1803               	skipnc
   524  072A  2F2C               	goto	u101
   525  072B  2F2D               	goto	u100
   526  072C                     u101:
   527  072C  2F49               	goto	l724
   528  072D                     u100:
   529  072D                     l718:
   530                           
   531                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 42:     PORTB = 0x0;
   532  072D  0871               	movf	control_fan@x+1,w
   533  072E  1283               	bcf	3,5	;RP0=0, select bank0
   534  072F  1303               	bcf	3,6	;RP1=0, select bank0
   535  0730  00A7               	movwf	_temp+1
   536  0731  0870               	movf	control_fan@x,w
   537  0732  00A6               	movwf	_temp
   538                           
   539                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 43:     TRISD = 0xff;
   540  0733  3004               	movlw	4
   541  0734  00A4               	movwf	_temp1
   542  0735  3000               	movlw	0
   543  0736  00A5               	movwf	_temp1+1
   544  0737                     l720:
   545                           
   546                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 44: 
   547  0737  0870               	movf	control_fan@x,w
   548  0738  0272               	subwf	control_fan@y,w
   549  0739  00A2               	movwf	_temp2
   550  073A  0871               	movf	control_fan@x+1,w
   551  073B  1C03               	skipc
   552  073C  0A71               	incf	control_fan@x+1,w
   553  073D  0273               	subwf	control_fan@y+1,w
   554  073E  00A3               	movwf	_temp2+1
   555  073F                     l722:
   556                           
   557                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 45:     Timer0_Init();
   558  073F  3064               	movlw	100
   559  0740  00F4               	movwf	??_control_fan
   560  0741  0872               	movf	control_fan@y,w
   561  0742  0274               	subwf	??_control_fan,w
   562  0743  00A0               	movwf	_temp3
   563  0744  0973               	comf	control_fan@y+1,w
   564  0745  1803               	skipnc
   565  0746  3E01               	addlw	1
   566  0747  00A1               	movwf	_temp3+1
   567                           
   568                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 46: 
   569  0748  2F64               	goto	l47
   570  0749                     l724:
   571                           
   572                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 48:   {
   573  0749  0873               	movf	control_fan@y+1,w
   574  074A  1283               	bcf	3,5	;RP0=0, select bank0
   575  074B  1303               	bcf	3,6	;RP1=0, select bank0
   576  074C  00A7               	movwf	_temp+1
   577  074D  0872               	movf	control_fan@y,w
   578  074E  00A6               	movwf	_temp
   579                           
   580                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 49:       if(((PORTD&0x80)== 0x80)&&((PORTD
      +                          &0x7f)!= mem1)){
   581  074F  3001               	movlw	1
   582  0750  00A4               	movwf	_temp1
   583  0751  3000               	movlw	0
   584  0752  00A5               	movwf	_temp1+1
   585  0753                     l726:
   586                           
   587                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 50:           x = PORTD&0x7f;
   588  0753  0872               	movf	control_fan@y,w
   589  0754  0270               	subwf	control_fan@x,w
   590  0755  00A2               	movwf	_temp2
   591  0756  0873               	movf	control_fan@y+1,w
   592  0757  1C03               	skipc
   593  0758  0A73               	incf	control_fan@y+1,w
   594  0759  0271               	subwf	control_fan@x+1,w
   595  075A  00A3               	movwf	_temp2+1
   596  075B                     l728:
   597                           
   598                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 51:           mem1 = x;
   599  075B  3064               	movlw	100
   600  075C  00F4               	movwf	??_control_fan
   601  075D  0870               	movf	control_fan@x,w
   602  075E  0274               	subwf	??_control_fan,w
   603  075F  00A0               	movwf	_temp3
   604  0760  0971               	comf	control_fan@x+1,w
   605  0761  1803               	skipnc
   606  0762  3E01               	addlw	1
   607  0763  00A1               	movwf	_temp3+1
   608  0764                     l47:
   609  0764  0008               	return
   610  0765                     __end_of_control_fan:
   611                           
   612                           	psect	text2
   613  06FE                     __ptext2:	
   614 ;; *************** function _Timer0_Init *****************
   615 ;; Defined at:
   616 ;;		line 18 in file "../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		None
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _Timer0_Init
   645  06FE                     _Timer0_Init:
   646  06FE                     l706:	
   647                           ;incstack = 0
   648                           ; Regs used in _Timer0_Init: []
   649                           
   650                           
   651                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 19:     }
   652  06FE  1683               	bsf	3,5	;RP0=1, select bank1
   653  06FF  1303               	bcf	3,6	;RP1=0, select bank1
   654  0700  1281               	bcf	1,5	;volatile
   655                           
   656                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 20: }
   657  0701  1181               	bcf	1,3	;volatile
   658                           
   659                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 23: int temp,temp1,temp2,temp3;
   660  0702  1101               	bcf	1,2	;volatile
   661                           
   662                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 24: void control_fan(int x, int y){
   663  0703  1081               	bcf	1,1	;volatile
   664                           
   665                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 25:     if (x < y){
   666  0704  1001               	bcf	1,0	;volatile
   667  0705                     l17:
   668  0705  0008               	return
   669  0706                     __end_of_Timer0_Init:
   670                           
   671                           	psect	text3
   672  0706                     __ptext3:	
   673 ;; *************** function _DelayTimer0_01ms *****************
   674 ;; Defined at:
   675 ;;		line 30 in file "../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  t               2    0[COMMON] unsigned int 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         2       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         2       0       0       0       0
   693 ;;Total ram usage:        2 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _DelayTimer0_01ms
   704  0706                     _DelayTimer0_01ms:
   705  0706                     l708:	
   706                           ;incstack = 0
   707                           ; Regs used in _DelayTimer0_01ms: [wreg+status,2+status,0]
   708                           
   709                           
   710                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 31:     else {
   711  0706  2F10               	goto	l714
   712  0707                     l710:
   713                           
   714                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 32:         temp = y;
   715  0707  309C               	movlw	156
   716  0708  1283               	bcf	3,5	;RP0=0, select bank0
   717  0709  1303               	bcf	3,6	;RP1=0, select bank0
   718  070A  0081               	movwf	1	;volatile
   719  070B                     l712:
   720                           
   721                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 33:         temp1 = 0b001;
   722  070B  110B               	bcf	11,2	;volatile
   723  070C                     l22:	
   724                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 34:         temp2 = x - y;
   725                           
   726  070C  1D0B               	btfss	11,2	;volatile
   727  070D  2F0F               	goto	u81
   728  070E  2F10               	goto	u80
   729  070F                     u81:
   730  070F  2F0C               	goto	l22
   731  0710                     u80:
   732  0710                     l714:
   733                           
   734                           ;../../Source/MOTOR_CONTROL/MOTOR_CONTROL.c: 31:     else {
   735  0710  3001               	movlw	1
   736  0711  02F0               	subwf	DelayTimer0_01ms@t,f
   737  0712  3000               	movlw	0
   738  0713  1C03               	skipc
   739  0714  03F1               	decf	DelayTimer0_01ms@t+1,f
   740  0715  02F1               	subwf	DelayTimer0_01ms@t+1,f
   741  0716  0A70               	incf	DelayTimer0_01ms@t,w
   742  0717  1D03               	skipz
   743  0718  2F1D               	goto	u91
   744  0719  0A71               	incf	DelayTimer0_01ms@t+1,w
   745  071A  1D03               	btfss	3,2
   746  071B  2F1D               	goto	u91
   747  071C  2F1E               	goto	u90
   748  071D                     u91:
   749  071D  2F07               	goto	l710
   750  071E                     u90:
   751  071E                     l26:
   752  071E  0008               	return
   753  071F                     __end_of_DelayTimer0_01ms:
   754  007E                     btemp	set	126	;btemp
   755  007E                     wtemp0	set	126
   756                           
   757                           	psect	config
   758                           
   759                           ;Config register CONFIG @ 0x2007
   760                           ;	Oscillator Selection bits
   761                           ;	FOSC = HS, HS oscillator
   762                           ;	Watchdog Timer Enable bit
   763                           ;	WDTE = OFF, WDT disabled
   764                           ;	Power-up Timer Enable bit
   765                           ;	PWRTE = OFF, PWRT disabled
   766                           ;	Brown-out Reset Enable bit
   767                           ;	BOREN = ON, BOR enabled
   768                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   769                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   770                           ;	Data EEPROM Memory Code Protection bit
   771                           ;	CPD = OFF, Data EEPROM code protection off
   772                           ;	Flash Program Memory Write Enable bits
   773                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   774                           ;	In-Circuit Debugger Mode bit
   775                           ;	DEBUG = 0x1, unprogrammed default
   776                           ;	Flash Program Memory Code Protection bit
   777                           ;	CP = OFF, Code protection off
   778  2007                     	org	8199
   779  2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_control_fan

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     622
                                              5 COMMON     2     2      0
                   _DelayTimer0_01ms
                        _Timer0_Init
                        _control_fan
 ---------------------------------------------------------------------------------
 (1) _control_fan                                          5     1      4     372
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayTimer0_01ms                                     2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTimer0_01ms
   _Timer0_Init
   _control_fan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 20 14:19:56 2021

                        _x 007B                          _y 0079                         l22 070C  
                       l17 0705                         l26 071E                         l53 0795  
                       l47 0764                         u80 0710                         u81 070F  
                       u90 071E                         u91 071D                        l710 0707  
                      l712 070B                        l720 0737                        l714 0710  
                      l706 06FE                        l722 073F                        l730 0765  
                      l708 0706                        l724 0749                        l716 071F  
                      l740 0788                        l732 076B                        l726 0753  
                      l718 072D                        l750 07B3                        l742 0790  
                      l734 076F                        l728 075B                        l760 07DA  
                      l752 07C0                        l744 0799                        l736 0774  
                      l754 07C4                        l746 07A7                        l738 077A  
                      l756 07CD                        l748 07AF                        l758 07D1  
                      u100 072D                        u101 072C                        u110 077A  
                      u111 0779                        u120 0788                        u105 0729  
                      u121 0787                        u130 0799                        u131 0798  
                      u140 07A7                        u141 07A6                        u125 0784  
                      u145 07A3               ?_control_fan 0070                       _TMR0 0001  
                     _mem1 0077                       _mem2 0028                       _main 0765  
                     _temp 0026                       btemp 007E                       start 0000  
        ?_DelayTimer0_01ms 0070         ??_DelayTimer0_01ms 0072                      ?_main 0070  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088                      _temp1 0024                      _temp2 0022  
                    _temp3 0020                      status 0003                      wtemp0 007E  
          __initialization 07EA               __end_of_main 07EA                     ??_main 0075  
            ??_Timer0_Init 0070               control_fan@x 0070               control_fan@y 0072  
  __end_of__initialization 07FC       __size_of_control_fan 0046             __pcstackCOMMON 0070  
      __end_of_Timer0_Init 0706             _OPTION_REGbits 0081                 __pbssBANK0 0020  
               __pmaintext 0765  __size_of_DelayTimer0_01ms 0019                _Timer0_Init 06FE  
                  __ptext1 071F                    __ptext2 06FE                    __ptext3 0706  
     end_of_initialization 07FC        start_initialization 07EA           _DelayTimer0_01ms 0706  
            ??_control_fan 0074          DelayTimer0_01ms@t 0070                __pbssCOMMON 0077  
                ___latbits 0002        __end_of_control_fan 0765               ?_Timer0_Init 0070  
              _control_fan 071F   __end_of_DelayTimer0_01ms 071F              __size_of_main 0085  
     __size_of_Timer0_Init 0008                 _INTCONbits 000B  
